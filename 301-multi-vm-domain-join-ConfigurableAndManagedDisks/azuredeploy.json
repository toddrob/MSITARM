{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 3,
      "maxLength": 13,
      "metadata": {
        "description": "Name for the Virtual Machine. Name will be iterated for each VM starting at 1"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "Description": "Number of Azure VM to create."
      }
    },
    "localAdminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Local Username for the Virtual Machine."
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Password for the Virtual Machine."
      }
    },
    "domainJoinUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Account for domain joining. Example: domain\\serviceaccount"
      }
    },
    "domainJoinPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "localAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Users and groups added to the local administrator group. "
      }
    },
    "SQLAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SQL SYS admins that can login to the Default SQL Instance installed on the VM. "
      }
    },
    "SQLServerAccount": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The account to use for running the SQL Service"
      }
    },
    "SQLServerPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "The password to use for running the SQL Service"
      }
    },
    "SQLAgentAccount": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The account to use for running the SQL Agent Service"
      }
    },
    "SQLAgentPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "The password use for running the SQL Agent Service"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS4_v2",
      "metadata": {
        "description": "Size for the Virtual Machine. Details: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-sizes?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#standard-tier-d-series"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftSQLServer",
      "allowedValues": [
        "MicrosoftSQLServer"
      ],
      "metadata": {
        "description": "OS Image Publisher. https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-ps-findimage/"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "SQL2012SP3-WS2012R2",
      "allowedValues": [
        "SQL2012SP3-WS2012R2",
        "SQL2014SP2-WS2012R2",
        "SQL2014-WS2012R2",
        "SQL2016-WS2012R2"
      ],
      "metadata": {
        "description": "Allowed Windows values: WindowsServer. Allowed SQL Values: SQL2012SP2-WS2012R2,SQL2014-WS2012R2, SQL2014SP1-WS2012R2, SQL2016CTP3-WS2012R2, SQL2016CTP3.1-WS2012R2, SQL2016CTP3.2-WS2012R2, SQL2016RC3-WS2012R2v2."
      }
    },
    "sku": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Enterprise",
      "allowedValues": [
        "Enterprise",
        "Web",
        "Standard",
        "Express"
      ],
      "metadata": {
        "description": "See Azure for available ImageSKU for your Location. Sample Code: <p><a target=new href=https://msitwiki/get-imagepublisher-imageoffer-imagesku-for-arm-templates/>Get-AzureRmVMImageSku</a></p> Example: <p>Enterprise, Standard, Web, Express.<p>"
      }
    },
    "H_DriveSize": {
      "type": "int",
      "minValue": 10,
      "maxValue": 1024,
      "metadata": {
        "description": "The size in GB for the H drive from 10GB to 1024GB"
      }
    },
    "H_DriveCache": {
      "type": "string",
      "defaultValue": "ReadOnly",
      "allowedValues": [
        "ReadOnly",
        "ReadWrite",
        "None"
      ],
      "metadata": {
        "description": "Details: https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage"
      }
    },
    "O_DriveSize": {
      "type": "int",
      "minValue": 10,
      "maxValue": 1024,
      "metadata": {
        "description": "The size in GB for the O drive from 10GB to 1024GB"
      }
    },
    "O_DriveCache": {
      "type": "string",
      "defaultValue": "ReadOnly",
      "allowedValues": [
        "ReadOnly",
        "ReadWrite",
        "None"
      ],
      "metadata": {
        "description": "Details: https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage"
      }
    },
    "T_DriveSize": {
      "type": "int",
      "minValue": 10,
      "maxValue": 1024,
      "metadata": {
        "description": "The size in GB for the T drive from 10GB to 1024GB"
      }
    },
    "T_DriveCache": {
      "type": "string",
      "defaultValue": "ReadOnly",
      "allowedValues": [
        "ReadOnly",
        "ReadWrite",
        "None"
      ],
      "metadata": {
        "description": "Details: https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage"
      }
    },
    "E_DriveSize": {
      "type": "int",
      "minValue": 10,
      "maxValue": 1024,
      "metadata": {
        "description": "The size in GB for the E drive from 10GB to 1024GB"
      }
    },
    "E_DriveCache": {
      "type": "string",
      "defaultValue": "ReadOnly",
      "allowedValues": [
        "ReadOnly",
        "ReadWrite",
        "None"
      ],
      "metadata": {
        "description": "Details: https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage performance, Standard_LRS for standard skus and Premium_LRS for premium skus"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    },
    "CiOwner": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "CiOwner tag for the Virtual Machine. Example: Domain\\youralias"
      }
    },
    "CiAnalystGroup": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "CiAnalystGroup tag for the Virtual Machine. "
      }
    },
    "appID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "appID tag for the Virtual Machine."
      }
    },
    "orgID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "orgID tag for the Virtual Machine."
      }
    },
    "env": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "Test",
        "UAT",
        "Lab",
        "SvcCont",
        "Pre-Production",
        "Production"
      ],
      "metadata": {
        "description": "environment tag for the Virtual Machine."
      }
    },
    "virtualNetwork": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name for the VirtualNetwork"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "ERNetwork",
      "metadata": {
        "description": "Name for the Resource Group that contains VirtualNetwork. "
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Name for the subnet"
      }
    },
    "PullServerRegistrationKey": {
      "type": "string",
      "metadata": {
        "description": "The key for the Pull server the VM will join"
      }
    },
    "PullServerRegistrationURI": {
      "type": "string",
      "metadata": {
        "description": "The pull server URI"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-01-01",

    "branch": "develop",
    "scriptsURL": "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),'/all-scripts/')]",
    "nestedURL": "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),'/all-nested/')]",

    "createVMtemplate": "template-MultipleVM-Conf-MD.json",
    "configurePullTemplate": "template-ConfigureDscPull.json",

    "Role": "SQL",

    "CreateVMUrl": "[concat(variables('nestedURL'),variables('createVMtemplate'))]",
    "AttachVMtoPullServerURL": "[concat(variables('nestedURL'),variables('configurePullTemplate'))]",

    "BuildMachineRoleURL": "[concat(variables('nestedURL'),'template-Build',variables('Role'),'-FixedDisks', '.json')]",

    "AzureAutomation": {
      "Url": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
      "RegistrationKey": "[parameters('PullServerRegistrationKey')]",
      "registrationUrl": "[parameters('PullServerRegistrationURI')]",
      "nodeConfigurationName": "MSITNoPAK.ISRM_GC",
      "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
      "timestamp": "1/1/2015"
    }
  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),'-CreateVM')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('CreateVMUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "localAdminUserName": {
            "value": "[parameters('localAdminUserName')]"
          },
          "localAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinPassword": {
            "value": "[parameters('domainJoinPassword')]"
          },
          "localAdmins": {
            "value": "[parameters('localAdmins')]"
          },
          "SQLAdmins": {
            "value": "[parameters('SQLAdmins')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "H_DriveSize": {
            "value": "[parameters('H_DriveSize')]"
          },
          "H_DriveCache": {
            "value": "[parameters('H_DriveCache')]"
          },
          "O_DriveSize": {
            "value": "[parameters('O_DriveSize')]"
          },
          "O_DriveCache": {
            "value": "[parameters('O_DriveCache')]"
          },
          "T_DriveSize": {
            "value": "[parameters('T_DriveSize')]"
          },
          "T_DriveCache": {
            "value": "[parameters('T_DriveCache')]"
          },
          "E_DriveSize": {
            "value": "[parameters('E_DriveSize')]"
          },
          "E_DriveCache": {
            "value": "[parameters('E_DriveCache')]"
          },
          "numberOfInstances": {
            "value": "[parameters('numberOfInstances')]"
          },
          "imagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "imageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          },
          "StorageAccountType": {
            "value": "[parameters('StorageAccountType')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "CiOwner": {
            "value": "[parameters('CiOwner')]"
          },
          "CiAnalystGroup": {
            "value": "[parameters('CiAnalystGroup')]"
          },
          "appID": {
            "value": "[parameters('appID')]"
          },
          "orgID": {
            "value": "[parameters('orgID')]"
          },
          "env": {
            "value": "[parameters('env')]"
          },
          "virtualNetwork": {
            "value": "[parameters('virtualNetwork')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "ouPath": {
            "value": "[parameters('ouPath')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "BuildMachineRoleLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('BuildMachineRoleURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(parameters('vmName'),copyindex(1))]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "H_DriveSize": {
            "value": "[parameters('H_DriveSize')]"
          },
          "H_DriveCache": {
            "value": "[parameters('H_DriveCache')]"
          },
          "O_DriveSize": {
            "value": "[parameters('O_DriveSize')]"
          },
          "O_DriveCache": {
            "value": "[parameters('O_DriveCache')]"
          },
          "T_DriveSize": {
            "value": "[parameters('T_DriveSize')]"
          },
          "T_DriveCache": {
            "value": "[parameters('T_DriveCache')]"
          },
          "E_DriveSize": {
            "value": "[parameters('E_DriveSize')]"
          },
          "E_DriveCache": {
            "value": "[parameters('E_DriveCache')]"
          },
          "SQLServerAccount": {
            "value": "[parameters('SQLServerAccount')]"
          },
          "SQLServerPassword": {
            "value": "[parameters('SQLServerPassword')]"
          },
          "SQLAgentAccount": {
            "value": "[parameters('SQLAgentAccount')]"
          },
          "SQLAgentPassword": {
            "value": "[parameters('SQLAgentPassword')]"
          },
          "SQLAdmin": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "SQLAdminPwd": {
            "value": "[parameters('domainJoinPassword')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/',parameters('vmName'), '-CreateVM')]"
      ]
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),copyIndex(1),'-AttachVMtoPullServer')]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "AttachVMtoPullServerLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AttachVMtoPullServerURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(parameters('vmName'),copyindex(1))]"
          },
          "RegistrationKey": {
            "value": "[variables('AzureAutomation').RegistrationKey]"
          },
          "registrationUrl": {
            "value": "[variables('AzureAutomation').registrationUrl]"
          },
          "nodeConfigurationName": {
            "value": "[variables('AzureAutomation').nodeConfigurationName]"
          },
          "timestamp": {
            "value": "[variables('AzureAutomation').timestamp]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/',parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]"
      ]
    }
  ]
}
