{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "minLength": 3,
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of VMs to deploy"
      }
    },
    "localAdminUserName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Username for the Virtual Machine."
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Password for the Virtual Machine."
      }
    },
    "domainJoinUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for domain joining"
      }
    },
    "domainJoinPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "Size for the Virtual Machine."
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer",
        "MicrosoftSQLServer"
      ],
      "metadata": {
        "description": "OS Image Publisher. https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-ps-findimage/"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Allowed Windows values: WindowsServer. Allowed SQL Values: SQL2012SP2-WS2012, SQL2012SP2-WS2012R2,SQL2014-WS2012R2, SQL2014SP1-WS2012R2, SQL2016CTP3-WS2012R2, SQL2016CTP3.1-WS2012R2, SQL2016CTP3.2-WS2012R2, SQL2016RC3-WS2012R2v2."
      }
    },
    "StorageAccountType": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage performance, Standard_LRS for standard skus and Premium_LRS for premium skus"
      }
    },
    "sku": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Allowed Windows values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter. Allowed SQL values: Enterprise, Standard, Web, Express."
      }
    },
    "H_DriveSize": {
      "type": "int",
      "metadata": {
        "description": "The size in GB for the H drive. "
      }
    },
    "H_DriveCache": {
      "type": "string",
      "metadata": {
        "description": "Use Caching?"
      }
    },
    "O_DriveSize": {
      "type": "int",
      "metadata": {
        "description": "The size in GB for the O drive."
      }
    },
    "O_DriveCache": {
      "type": "string",
      "metadata": {
        "description": "Use Caching?"
      }
    },
    "T_DriveSize": {
      "type": "int",
      "minValue": 10,
      "maxValue": 1024,
      "metadata": {
        "description": "The size in GB for the T drive."
      }
    },
    "T_DriveCache": {
      "type": "string",
      "metadata": {
        "description": "Use Caching?"
      }
    },
    "E_DriveSize": {
      "type": "int",
      "metadata": {
        "description": "The size in GB for the E drive."
      }
    },
    "E_DriveCache": {
      "type": "string",
      "metadata": {
        "description": "Use Caching?"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "CiOwner": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "CiOwner tag for the Virtual Machine."
      }
    },
    "CiAnalystGroup": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "CiAnalystGroup tag for the Virtual Machine."
      }
    },
    "appID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "appID tag for the Virtual Machine."
      }
    },
    "orgID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "orgID tag for the Virtual Machine."
      }
    },
    "env": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "environment tag for the Virtual Machine."
      }
    },
    "localAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "local admins that can login to the VMs. csv list of domain\\user"
      }
    },
    "SQLAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SQL SYS admins that can login to the Default SQL Instance instaqlled on the VM. csv list of domain\\user"
      }
    },
    "virtualNetwork": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name for the VirtualNetwork"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "ERNetwork",
      "metadata": {
        "description": "Name for the Resource Group that contains VirtualNetwork"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Name for the subnet"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "MSITVersion": "2.1.1",

    "branch": "develop",
    "scriptsURL": "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),'/all-scripts/')]",
    "nestedURL": "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),'/all-nested/')]",

    "DomainJoinzip": "DomainJoin.ps1.zip",
    "formatDiskszip": "FormatDataDisk.ps1.zip",
    "formatDiskstemplate": "template-FixedDataDisks.json",

    "SetStaticIP": "template-SetStaticIP.json",

    "modulesUrl": "[concat(variables('scriptsURL'),variables('DomainJoinzip'))]",
    "FormatDisksUrl": "[concat(variables('nestedURL'), variables('formatDiskstemplate'))]",
    "SetStaticIPUrl": "[concat(variables('nestedURL'),variables('SetStaticIP'))]",

    "vnetSubscriptionid": "[subscription().subscriptionId]",
    "vnetID": "[concat('/subscriptions/',variables('vnetSubscriptionid'),'/resourceGroups/',parameters('vnetResourceGroup'),'/providers/Microsoft.Network/virtualnetworks/',parameters('virtualNetwork'))]",
    "imageOffer": "[parameters('imageOffer')]",
    "imagePublisher": "[parameters('imagePublisher')]",
    "sku": "[parameters('sku')]",
    "nicName": "[parameters('vmName')]",
    "subnetName": "[parameters('subnetName')]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "autologonContent": "[concat('<AutoLogon><Password><Value>',parameters('localAdminPassword'),'</Value></Password><Domain>.</Domain><Enabled>true</Enabled><LogonCount>1</LogonCount><Username>',parameters('localAdminUserName'),'</Username></AutoLogon>')]",
    "firstLogonCommands": "<FirstLogonCommands><SynchronousCommand><CommandLine>netsh advfirewall firewall set rule group=&quot;Windows Management Instrumentation (WMI)&quot; new enable=Yes</CommandLine><Description>Update Firewall Settings</Description><Order>1</Order></SynchronousCommand><SynchronousCommand><CommandLine>logoff.exe</CommandLine><Description>Logoff</Description><Order>2</Order></SynchronousCommand></FirstLogonCommands>",
    "domainJoinOptions": 3,
    "vmExtensionName": "DSCExtension",
    "diskCaching": "None",

    "SQLPremDisk": {
      "vmSize": "[parameters('vmSize')]",
      "SQLServer": {
        "DataPath": "H:\\MSSqlServer\\MSSQL\\DATA",
        "LogPath": "O:\\MSSqlServer\\MSSQL\\DATA",
        "TempDbPath": "T:\\MSSqlServer\\MSSQL\\DATA",
        "backupPath": "E:\\MSSqlServer\\MSSQL\\Bak"
      },
      "dataDisks": {
        "1": {
          "DiskName": "H",
          "DiskLabel": "Data",
          "DiskSize": "[parameters('H_DriveSize')]"
        },
        "2": {
          "DiskName": "O",
          "DiskLabel": "Logs",
          "DiskSize": "[parameters('O_DriveSize')]"
        },
        "3": {
          "DiskName": "E",
          "DiskLabel": "Backups",
          "DiskSize": "[parameters('E_DriveSize')]"
        },
        "4": {
          "DiskName": "T",
          "DiskLabel": "TempDB",
          "DiskSize": "[parameters('T_DriveSize')]"
        }
      }
    },
    "DiskSKU": "[variables(concat('SQLPrem','Disk'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyindex(1),'nic1')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface",
        "MSITVersion": "[variables('MSITVersion')]",
        "CiOwner": "[parameters('CiOwner')]",
        "CiAnalystGroup": "[parameters('CiAnalystGroup')]",
        "appID": "[parameters('appID')]",
        "orgID": "[parameters('orgID')]",
        "env": "[parameters('env')]"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'),copyindex(1))]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine",
        "MSITVersion": "[variables('MSITVersion')]",
        "CiOwner": "[parameters('CiOwner')]",
        "CiAnalystGroup": "[parameters('CiAnalystGroup')]",
        "appID": "[parameters('appID')]",
        "orgID": "[parameters('orgID')]",
        "env": "[parameters('env')]"
      },
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'),copyindex(1),'nic1')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('DiskSKU').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'),copyindex(1))]",
          "adminUsername": "[parameters('localAdminUserName')]",
          "adminPassword": "[parameters('localAdminPassword')]",
          "windowsConfiguration": {
            "additionalUnattendContent": [
              {
                "passName": "oobesystem",
                "componentName": "Microsoft-Windows-Shell-Setup",
                "settingName": "Autologon",
                "content": "[variables('autologonContent')]"
              },
              {
                "passName": "oobesystem",
                "componentName": "Microsoft-Windows-Shell-Setup",
                "settingName": "FirstLogonCommands",
                "content": "[variables('firstLogonCommands')]"
              }
            ],
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('sku')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(parameters('vmName'),copyindex(1),'-osManagedDisk')]",
            "managedDisk": {
              "storageAccountType": "[parameters('StorageAccountType')]"
            }
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmName'),copyindex(1),'-DataDiskH')]",
              "lun": 0,
              "createOption": "Empty",
              "caching": "[parameters('H_DriveCache')]",
              "diskSizeGB": "[parameters('H_DriveSize')]",
              "managedDisk": {
                "storageAccountType": "[parameters('StorageAccountType')]"
              }
            },
            {
              "name": "[concat(parameters('vmName'),copyindex(1),'-DataDiskO')]",
              "lun": 1,
              "createOption": "Empty",
              "caching": "[parameters('O_DriveCache')]",
              "diskSizeGB": "[parameters('O_DriveSize')]",
              "managedDisk": {
                "storageAccountType": "[parameters('StorageAccountType')]"
              }
            },
            {
              "name": "[concat(parameters('vmName'),copyindex(1),'-DataDiskT')]",
              "lun": 2,
              "createOption": "Empty",
              "caching": "[parameters('T_DriveCache')]",
              "diskSizeGB": "[parameters('T_DriveSize')]",
              "managedDisk": {
                "storageAccountType": "[parameters('StorageAccountType')]"
              }
            },
            {
              "name": "[concat(parameters('vmName'),copyindex(1),'-DataDiskE')]",
              "lun": 3,
              "createOption": "Empty",
              "caching": "[parameters('E_DriveCache')]",
              "diskSizeGB": "[parameters('E_DriveSize')]",
              "managedDisk": {
                "storageAccountType": "[parameters('StorageAccountType')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyindex(1),'nic1'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[concat(variables('nicName'),copyindex(1),'','-SetStaticIP')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat(parameters('vmName'),copyindex(1),'nic1')]",
        "[concat(parameters('vmName'),copyindex(1))]"
      ],
      "copy": {
        "name": "StaticIPLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('SetStaticIPUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
         "nicName": {
            "value": "[concat(parameters('vmName'),copyindex(1))]"
          },
          "ipAddress": {
            "value": "[reference(concat(parameters('vmName'),copyindex(1),'nic1')).ipConfigurations[0].properties.privateIPAddress]"
          },
          "subnetRef": {
            "value": "[variables('subnetRef')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),copyindex(1),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "DSCExtensionLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'),copyindex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.18",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('modulesUrl')]",
          "SasToken": "",
          "ConfigurationFunction": "DomainJoin.ps1\\DomainJoin",
          "Properties": {
            "Domain": "[parameters('DomainName')]",
            "LocalAccount": {
              "UserName": "[parameters('localAdminUserName')]",
              "Password": "PrivateSettingsRef:localPassword"
            },
            "DomainAccount": {
              "UserName": "[parameters('domainJoinUserName')]",
              "Password": "PrivateSettingsRef:DomainPassword"
            },
            "LocalAdmins": "[parameters('localAdmins')]",
            "SQLAdmins": "[parameters('SQLAdmins')]",
            "OU": "[parameters('ouPath')]",
            "scriptFolderUrl": "[variables('scriptsURL')]"
          }
        },
        "protectedSettings": {
          "Items": {
            "LocalPassword": "[parameters('localAdminPassword')]",
            "DomainPassword": "[parameters('domainJoinPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),copyindex(1),'-FormatDataDisks')]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "FormatDataDisksLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('FormatDisksUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(parameters('vmName'),copyindex(1))]"
          },
          "H_DriveSize": {
            "value": "[parameters('H_DriveSize')]"
          },
          "O_DriveSize": {
            "value": "[parameters('O_DriveSize')]"
          },
          "T_DriveSize": {
            "value": "[parameters('T_DriveSize')]"
          },
          "E_DriveSize": {
            "value": "[parameters('E_DriveSize')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('vmName'),copyindex(1)),variables('vmExtensionName'))]"

      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),copyindex(1),'/BGInfo')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'),copyindex(1))]"
      ],
      "copy": {
        "name": "BGInfoLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "settings": { },
        "protectedSettings": null
      }
    }
  ]
}

